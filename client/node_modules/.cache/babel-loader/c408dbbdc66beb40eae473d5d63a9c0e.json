{"ast":null,"code":"var _jsxFileName = \"/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsFetching } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribe = null;\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const {\n      dispatch,\n      fetchCollectionsAsync\n    } = this.props; // const collectionRef = firestore.collection(\"collections\");\n    // this.unsubscribe = collectionRef.onSnapshot(async (snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n    // });\n    // this.unsubscribe = collectionRef.get().then((snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n    // });\n\n    fetchCollectionsAsync(); //this.unsubscribe = () => fetchCollectionsAsync();\n  }\n\n  componentWillUnmount() {// this.unsubscribe();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, {\n      isLoading: this.props.isCollectionsFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = () => createStructuredSelector({\n  isCollectionsFetching: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSpinner(ShopPage));","map":{"version":3,"sources":["/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","connect","fetchCollectionsAsync","withSpinner","createStructuredSelector","selectIsFetching","CollectionsOverviewWithSpinner","ShopPage","Component","unsubscribe","componentDidMount","console","log","props","dispatch","componentWillUnmount","render","isCollectionsFetching","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;;AACA,MAAMO,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,WADqC,GACvB,IADuB;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYZ,MAAAA;AAAZ,QAAsC,KAAKW,KAAjD,CAFkB,CAGlB;AACA;AACA;AAEA;AACA;AACA;AACA;;AACAX,IAAAA,qBAAqB,GAXH,CAYlB;AACD;;AAEDa,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,8BAAD;AACE,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,qBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AA5BoC;;AA+BvC,MAAMC,eAAe,GAAG,MACtBd,wBAAwB,CAAC;AACvBa,EAAAA,qBAAqB,EAAEZ;AADA,CAAD,CAD1B;;AAKA,MAAMc,kBAAkB,GAAIL,QAAD,IAAc;AACvC,SAAO;AACLZ,IAAAA,qBAAqB,EAAE,MAAMY,QAAQ,CAACZ,qBAAqB,EAAtB;AADhC,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBiB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbhB,WAAW,CAACI,QAAD,CAHE,CAAf","sourcesContent":["import React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsFetching } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nclass ShopPage extends React.Component {\n  unsubscribe = null;\n  componentDidMount() {\n    console.log(this.props);\n    const { dispatch, fetchCollectionsAsync } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // this.unsubscribe = collectionRef.onSnapshot(async (snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n\n    // });\n    // this.unsubscribe = collectionRef.get().then((snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n    // });\n    fetchCollectionsAsync();\n    //this.unsubscribe = () => fetchCollectionsAsync();\n  }\n\n  componentWillUnmount() {\n    // this.unsubscribe();\n  }\n  render() {\n    return (\n      <div className=\"shop-page\">\n        <CollectionsOverviewWithSpinner\n          isLoading={this.props.isCollectionsFetching}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () =>\n  createStructuredSelector({\n    isCollectionsFetching: selectIsFetching,\n  });\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withSpinner(ShopPage));\n"]},"metadata":{},"sourceType":"module"}