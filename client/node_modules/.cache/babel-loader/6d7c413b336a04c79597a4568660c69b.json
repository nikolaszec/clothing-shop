{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBprqehG_LogR9hOhMbybPT_L422g8bWj4\",\n  authDomain: \"clothing-store-6c401.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-6c401.firebaseio.com\",\n  projectId: \"clothing-store-6c401\",\n  storageBucket: \"clothing-store-6c401.appspot.com\",\n  messagingSenderId: \"966220377509\",\n  appId: \"1:966220377509:web:5081d5461e505962f70c4c\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //Setting up google authentication\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //Adding user signed in through google account to firebase database\n//email, displayName, createdAt\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    try {\n      const {\n        displayName,\n        email\n      } = userAuth;\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/firebase/firebase.util.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","displayName","email","set","createdAt","Date","error","console","log","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,WAAW,EAAE,6CAHQ;AAIrBC,EAAAA,SAAS,EAAE,sBAJU;AAKrBC,EAAAA,aAAa,EAAE,kCALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;AACA;;AAEA,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,QAAI;AACF,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBT,QAA/B;AACA,YAAME,OAAO,CAACQ,GAAR,CAAY;AAChBF,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBE,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHK;AAIhB,WAAGX;AAJa,OAAZ,CAAN;AAMD,KARD,CAQE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,OAA3B;AACD;AACF;;AACD,SAAOd,OAAP;AACD,CAlBM;AAoBP,eAAerB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBprqehG_LogR9hOhMbybPT_L422g8bWj4\",\n  authDomain: \"clothing-store-6c401.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-6c401.firebaseio.com\",\n  projectId: \"clothing-store-6c401\",\n  storageBucket: \"clothing-store-6c401.appspot.com\",\n  messagingSenderId: \"966220377509\",\n  appId: \"1:966220377509:web:5081d5461e505962f70c4c\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Setting up google authentication\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n//Adding user signed in through google account to firebase database\n//email, displayName, createdAt\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    try {\n      const { displayName, email } = userAuth;\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}