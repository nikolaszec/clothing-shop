{"ast":null,"code":"var _jsxFileName = \"/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { firestore, collectionMap } from \"../../firebase/firebase.util\";\nimport { connect } from \"react-redux\";\nimport { fetchShopData } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribe = null;\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\"); // this.unsubscribe = collectionRef.onSnapshot(async (snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n    // });\n\n    this.unsubscribe = collectionRef.get().then(snapshot => {\n      dispatch(fetchShopData(collectionMap(snapshot)));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, {\n      isLoading: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect(null)(withSpinner(ShopPage));","map":{"version":3,"sources":["/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","firestore","collectionMap","connect","fetchShopData","withSpinner","CollectionsOverviewWithSpinner","ShopPage","Component","unsubscribe","componentDidMount","dispatch","props","collectionRef","collection","get","then","snapshot","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,8BAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;;AACA,MAAMO,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,WADqC,GACvB,IADuB;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB,CAFkB,CAGlB;AACA;AAEA;;AACA,SAAKL,WAAL,GAAmBI,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACxDN,MAAAA,QAAQ,CAACP,aAAa,CAACF,aAAa,CAACe,QAAD,CAAd,CAAd,CAAR;AACD,KAFkB,CAAnB;AAGD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKT,WAAL;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAvBoC;;AA0BvC,eAAehB,OAAO,CAAC,IAAD,CAAP,CAAcE,WAAW,CAACE,QAAD,CAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { firestore, collectionMap } from \"../../firebase/firebase.util\";\nimport { connect } from \"react-redux\";\nimport { fetchShopData } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nclass ShopPage extends React.Component {\n  unsubscribe = null;\n  componentDidMount() {\n    const { dispatch } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    // this.unsubscribe = collectionRef.onSnapshot(async (snapshot) => {\n    //   dispatch(fetchShopData(collectionMap(snapshot)));\n\n    // });\n    this.unsubscribe = collectionRef.get().then((snapshot) => {\n      dispatch(fetchShopData(collectionMap(snapshot)));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n  render() {\n    return (\n      <div className=\"shop-page\">\n        <CollectionsOverviewWithSpinner isLoading={false} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null)(withSpinner(ShopPage));\n"]},"metadata":{},"sourceType":"module"}