{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBprqehG_LogR9hOhMbybPT_L422g8bWj4\",\n  authDomain: \"clothing-store-6c401.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-6c401.firebaseio.com\",\n  projectId: \"clothing-store-6c401\",\n  storageBucket: \"clothing-store-6c401.appspot.com\",\n  messagingSenderId: \"966220377509\",\n  appId: \"1:966220377509:web:5081d5461e505962f70c4c\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //Setting up google authentication\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //Adding user signed in through google account to firebase database\n//email, displayName, createdAt\n\nexport const addCollectionAndDocument = async (collection, objectToAdd) => {\n  const collectionRef = firestore.collection(collection);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const collectionMap = collections => {\n  // collections.forEach((collection) => {\n  // });\n  // const reducedArr = collections.reduce((previous, current) => {\n  //   return (previous[current.title] = current);\n  // }, {});\n  // return reducedArr;\n  return collections.reduce((accumulatedValue, currentCollection) => {\n    const {\n      items,\n      title\n    } = currentCollection;\n    const routeName = title.toLowerCase();\n    return accumulatedValue[title] = {\n      items,\n      title,\n      routeName\n    };\n  }, {});\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName\n    } = userAuth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/media/nikolas/FA4A0DE44A0D9E8F/UbuntuData/andrei-negoi-react/clothing-store/src/firebase/firebase.util.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollectionAndDocument","collection","objectToAdd","collectionRef","batch","forEach","obj","newDocRef","doc","set","commit","collectionMap","collections","reduce","accumulatedValue","currentCollection","items","title","routeName","toLowerCase","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapshot","get","exists","email","displayName","createdAt","Date","error","console","log","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,WAAW,EAAE,6CAHQ;AAIrBC,EAAAA,SAAS,EAAE,sBAJU;AAKrBC,EAAAA,aAAa,EAAE,kCALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;AACA;;AAEA,OAAO,MAAMM,wBAAwB,GAAG,OAAOC,UAAP,EAAmBC,WAAnB,KAAmC;AACzE,QAAMC,aAAa,GAAGV,SAAS,CAACQ,UAAV,CAAqBA,UAArB,CAAtB;AAEA,QAAMG,KAAK,GAAGX,SAAS,CAACW,KAAV,EAAd;AACAF,EAAAA,WAAW,CAACG,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,UAAMC,SAAS,GAAGJ,aAAa,CAACK,GAAd,EAAlB;AACAJ,IAAAA,KAAK,CAACK,GAAN,CAAUF,SAAV,EAAqBD,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACM,MAAN,EAAb;AACD,CAVM;AAYP,OAAO,MAAMC,aAAa,GAAIC,WAAD,IAAiB;AAC5C;AAEA;AACA;AACA;AACA;AACA;AACA,SAAOA,WAAW,CAACC,MAAZ,CAAmB,CAACC,gBAAD,EAAmBC,iBAAnB,KAAyC;AACjE,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBF,iBAAzB;AACA,UAAMG,SAAS,GAAGD,KAAK,CAACE,WAAN,EAAlB;AACA,WAAQL,gBAAgB,CAACG,KAAD,CAAhB,GAA0B;AAChCD,MAAAA,KADgC;AAEhCC,MAAAA,KAFgC;AAGhCC,MAAAA;AAHgC,KAAlC;AAKD,GARM,EAQJ,EARI,CAAP;AASD,CAjBM;AAmBP,OAAO,MAAME,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAG9B,SAAS,CAACe,GAAV,CAAe,SAAQa,QAAQ,CAACG,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyBR,QAA/B;;AAEA,QAAI;AACF,YAAME,OAAO,CAACd,GAAR,CAAY;AAChBoB,QAAAA,WADgB;AAEhBD,QAAAA,KAFgB;AAGhBE,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHK;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,OAA3B;AACD;AACF;;AACD,SAAOZ,OAAP;AACD,CAnBM;AAqBP,eAAezC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBprqehG_LogR9hOhMbybPT_L422g8bWj4\",\n  authDomain: \"clothing-store-6c401.firebaseapp.com\",\n  databaseURL: \"https://clothing-store-6c401.firebaseio.com\",\n  projectId: \"clothing-store-6c401\",\n  storageBucket: \"clothing-store-6c401.appspot.com\",\n  messagingSenderId: \"966220377509\",\n  appId: \"1:966220377509:web:5081d5461e505962f70c4c\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Setting up google authentication\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n//Adding user signed in through google account to firebase database\n//email, displayName, createdAt\n\nexport const addCollectionAndDocument = async (collection, objectToAdd) => {\n  const collectionRef = firestore.collection(collection);\n\n  const batch = firestore.batch();\n  objectToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const collectionMap = (collections) => {\n  // collections.forEach((collection) => {\n\n  // });\n  // const reducedArr = collections.reduce((previous, current) => {\n  //   return (previous[current.title] = current);\n  // }, {});\n  // return reducedArr;\n  return collections.reduce((accumulatedValue, currentCollection) => {\n    const { items, title } = currentCollection;\n    const routeName = title.toLowerCase();\n    return (accumulatedValue[title] = {\n      items,\n      title,\n      routeName,\n    });\n  }, {});\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, displayName } = userAuth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}